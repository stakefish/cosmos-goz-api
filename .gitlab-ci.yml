image: node:11-alpine

stages:
  - test
  - build
  - deploy-test
  # - deploy-staging
  - deploy-prod

test:
  stage: test
  services:
    - postgres:11-alpine
  variables:
    POSTGRES_USER: test
    POSTGRES_PASSWORD: test
    POSTGRES_DB: test
    NODE_ENV: ci
  script:
    - npm ci
    - npm run test
  except:
    - tags

build-docker:
  stage: build
  image: docker:stable
  services:
    - docker:dind
  variables:
    DOCKER_DRIVER: overlay2
    # DOCKER_HOST: tcp://registry.gitlab.fish
    CONTAINER_IMAGE: registry.gitlab.fish/$CI_PROJECT_PATH
    CONTAINER_VERSION: $CI_COMMIT_SHORT_SHA
  script:
    - sed -i "s/0\.0\.0/${CI_COMMIT_TAG}/" package.json
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.fish
    - docker build -t $CONTAINER_IMAGE:$CONTAINER_VERSION -t $CONTAINER_IMAGE:latest .
    - docker push $CONTAINER_IMAGE:$CONTAINER_VERSION
    - docker push $CONTAINER_IMAGE:latest

deploy-test:
  stage: deploy-test
  image: lwolf/helm-kubectl-docker
  variables:
    KUBENS: stakefish-test
    CONTAINER_IMAGE: registry.gitlab.fish/$CI_PROJECT_PATH
    CONTAINER_VERSION: $CI_COMMIT_SHORT_SHA
    HOST_NAME: goz-api.testing.fish
    NODE_ENV: k8s_test
  script:
    - envsubst '${CONTAINER_IMAGE} ${CONTAINER_VERSION} ${HOST_NAME} ${NODE_ENV}' < k8s/deployment.yaml > deployment.yaml
    - kubectl apply -f deployment.yaml --namespace $KUBENS
  environment:
    name: staging

# deploy-staging:
#   stage: deploy-staging
#   image: lwolf/helm-kubectl-docker
#   variables:
#     KUBENS: stakefish-staging
#     CONTAINER_IMAGE: registry.gitlab.fish/$CI_PROJECT_PATH
#     CONTAINER_VERSION: $CI_COMMIT_SHORT_SHA
#     HOST_NAME: goz-api.staging.fish
#     NODE_ENV: k8s_staging
#   script:
#     - envsubst '${CONTAINER_IMAGE} ${CONTAINER_VERSION} ${HOST_NAME} ${NODE_ENV}' < k8s/deployment.yaml > deployment.yaml
#     - kubectl apply -f deployment.yaml --namespace $KUBENS
#   environment:
#     name: staging
#   only:
#     - tags

deploy-prod:
  stage: deploy-prod
  image: lwolf/helm-kubectl-docker
  variables:
    KUBENS: stakefish-prod
    CONTAINER_IMAGE: registry.gitlab.fish/$CI_PROJECT_PATH
    CONTAINER_VERSION: $CI_COMMIT_SHORT_SHA
    HOST_NAME: goz-api.cosmos.fish
    NODE_ENV: k8s_prod
  script:
    - envsubst '${CONTAINER_IMAGE} ${CONTAINER_VERSION} ${HOST_NAME} ${NODE_ENV}' < k8s/deployment.yaml > deployment.yaml
    - kubectl apply -f deployment.yaml --namespace $KUBENS
  environment:
    name: production
  only:
    - tags
