apiVersion: apps/v1
kind: Deployment
metadata:
  name: cosmos-goz-api
  labels:
    app: cosmos-goz-api
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: cosmos-goz-api
  template:
    metadata:
      labels:
        app: cosmos-goz-api
    spec:
      containers:
      - name: api-external
        image: ${CONTAINER_IMAGE}:${CONTAINER_VERSION}
        ports:
        - containerPort: 8080
        env:
        - name: NODE_ENV
          value: "${NODE_ENV}"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      - name: nginx
        image: nginx:1.15
        ports:
          - containerPort: 80
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        volumeMounts:
          - mountPath: /etc/nginx/conf.d
            name: nginx-config
      volumes:
      - name: nginx-config
        configMap:
          name: cosmos-goz-api-nginx
      imagePullSecrets:
      - name: registry-gitlab-fish-md

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: cosmos-goz-api-nginx
data:
  timeout.conf: |
    proxy_connect_timeout 600;
    proxy_send_timeout 600;
    proxy_read_timeout 600;
    send_timeout 600;

  nginx.conf: |
    upstream api-external {
      server localhost:8080;
    }

    server {
      listen 80;

      location = /tamagotchi {
        proxy_pass http://161.35.5.206:8001/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
      }

      location = /tamagotchi/ {
        proxy_pass http://161.35.5.206:8001/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
      }

      location ^~ /tamagotchi-rpc/ {
          rewrite  ^/tamagotchi-rpc/(.*) /$1 break;

          proxy_pass http://161.35.5.206:26657/;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
          proxy_set_header Host $host;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
      }

      location = /tamagotchi-res {
        proxy_pass http://161.35.5.206:8000/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
      }

      location = /tamagotchi-res/ {
        proxy_pass http://161.35.5.206:8000/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
      }

      location ^~ /tamagotchi-res-rpc/ {
        rewrite  ^/tamagotchi-res-rpc/(.*) /$1 break;
        proxy_pass http://161.35.5.206:46657/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
      }

      location / {
        proxy_pass http://api-external;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
      }

    }

---

kind: Service
apiVersion: v1
metadata:
  name: cosmos-goz-api
spec:
  type: ClusterIP
  selector:
    app: cosmos-goz-api
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
    - name: https
      protocol: TCP
      port: 443
      targetPort: 80
---
kind: Ingress
apiVersion: extensions/v1beta1
metadata:
  name: cosmos-goz-api
  annotations:
    kubernetes.io/ingress.class: nginx
    certmanager.k8s.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-next-upstream-timeout: "600"
spec:
  tls:
  - hosts:
    - ${HOST_NAME}
    secretName: cosmos-goz-api-tls
  rules:
  - host: ${HOST_NAME}
    http:
      paths:
      - backend:
          serviceName: cosmos-goz-api
          servicePort: 80
